name: Build

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  RELEASE_KEYSTORE_PATH: uncrack_release.jks

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create dummy google-services.json (Debug and Release)
        run: |
          mkdir -p app/src/debug
          mkdir -p app/src/release

          cat <<EOF > app/src/debug/google-services.json
          {
            "project_info": {
              "project_number": "1234567890",
              "project_id": "dummy-project"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "1:1234567890:android:dummyappid",
                  "android_client_info": {
                    "package_name": "com.aritradas.uncrack.debug"
                  }
                },
                "oauth_client": [],
                "api_key": [
                  {
                    "current_key": "DUMMY_API_KEY"
                  }
                ],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ],
            "configuration_version": "1"
          }
          EOF

          cat <<EOF > app/src/release/google-services.json
          {
            "project_info": {
              "project_number": "1234567890",
              "project_id": "dummy-project"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "1:1234567890:android:dummyappid",
                  "android_client_info": {
                    "package_name": "com.aritradas.uncrack"
                  }
                },
                "oauth_client": [],
                "api_key": [
                  {
                    "current_key": "DUMMY_API_KEY"
                  }
                ],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ],
            "configuration_version": "1"
          }
          EOF

      - name: Decode keystore from secret
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > $RELEASE_KEYSTORE_PATH

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build with Gradle
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          # Build debug without signing parameters
          ./gradlew assembleDebug
          
          # Build release with signing parameters
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$RELEASE_KEYSTORE_PATH \
            -Pandroid.injected.signing.store.password=$RELEASE_KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$RELEASE_KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$RELEASE_KEY_PASSWORD \
            -x uploadCrashlyticsMappingFileRelease
